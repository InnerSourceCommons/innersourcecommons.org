<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>InnerSource Commons</title><link>https://innersourcecommons.org/zh/</link><description>Recent content on InnerSource Commons</description><generator>Hugo</generator><language>zh</language><atom:link href="https://innersourcecommons.org/zh/index.xml" rel="self" type="application/rss+xml"/><item><title>介绍</title><link>https://innersourcecommons.org/zh/learn/learning-path/contributor/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/contributor/01/</guid><description>&lt;div class="sect2">
&lt;h3 id="_innersource_的贡献者contributor">InnerSource 的贡献者（Contributor）&lt;/h3>
&lt;div class="paragraph">
&lt;p>你的工作计划是否曾经因为另一个团队没有做完你所依赖的功能而卡住？也许你不得不在项目中做一些额外的工作来补上这些缺失的功能。若能不再受这种问题困扰，那该有多美好呀？&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>有了 InnerSource 项目，你将永远不必再为等待其他团队交付某些所需功能而困扰了。如果你没有从此项目中获取所需东西，则可以担任 InnerSource 的贡献者，直接在另一个团队的代码库中进行所需的更改。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>“贡献者”指为 InnerSource 社区项目代码库做贡献的人，这些人可以将自己视为社区的一部分。而对于大多数贡献者来说，都会经历这一系列过程：从了解社区，到使用社区的产品，再到与社区成员进行交互，最后开始做出贡献。最后，其中一些贡献者会成为 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/">&lt;em>Trusted Committer&lt;/em>&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_与其他角色的关系">与其他角色的关系&lt;/h3>
&lt;div class="paragraph">
&lt;p>作为 InnerSource 社区中的贡献者，你将与 InnerSource 的其他角色（例如 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/trusted-committer">&lt;em>Trusted Committer&lt;/em>&lt;/a> 或 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/product-owner">&lt;em>产品所有者（Product Owner）&lt;/em>&lt;/a> ）进行交互，也可能与其他贡献者进行交互。有时，这些角色可以由同一个人扮演，例如小型基础项目中的“Trusted Committer”和“产品所有者”。&lt;/p></description></item><item><title>介绍</title><link>https://innersourcecommons.org/zh/learn/learning-path/introduction/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/introduction/01/</guid><description>&lt;div class="paragraph">
&lt;p>本学习路径介绍了InnerSource。
InnerSource是开源实践和原则在企业内部软件开发的应用。
InnerSource的软件仍然是该公司的专有软件，但它对该企业任何内部员工都是开放的，都可以使用它并为它做出贡献。
这一战略能够支持广泛而有效的协作，生成对其许多内部利益相关者不断变化的需求作出响应和灵活反应的软件。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>本学习路径教你如何识别适合InnerSource的情况。
我们将从较高的层次概述InnerSource在这些情况下如何提供帮助。
在讨论InnerSource时，您将熟悉使用的专业术语。
我们还将列举InnerSource所基于的关键原则，以及在有效应用时所看到的好处。&lt;/p>
&lt;/div>
&lt;!--- This file autogenerated from https://github.com/InnerSourceCommons/InnerSourceLearningPath/blob/main/scripts --></description></item><item><title>介绍</title><link>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/01/</guid><description>&lt;div class="sect2">
&lt;h3 id="_trusted_committer">Trusted Committer&lt;/h3>
&lt;div class="paragraph">
&lt;p>Trusted Committer角色是InnerSource社区中的关键角色之一。将Trusted Committer视为你所在的社区中所信任的对象，他们可以通过重要的技术决策和指导贡献者来最终获得收益。我们对Trusted Committer的要求很高，同时这个岗位也会得到很高的回报。这个角色并不是一个自以为是的把关者，甚至他对任何InnerSource社区的成功都至关重要。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>一般而言，Trusted Committer角色是由其职责而不是其特权定义的。在很高程度上 Trusted Committer 代表其InnerSource社区和该社区正在开发的产品的利益。他们关心社区和产品的健康。因此，作为Trusted Committer，您将同时承担面向技术和社区的责任。我们将在以下各章节中探讨这两个方面。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>在详细介绍Trusted Committer实际功能之前，让我们花一些时间从高度抽象的角度将Trusted Committer角色与InnerSource中的其他角色进行对比，并解释为什么我们认为该名称既恰当又重要。让我们从 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>角色开始。顾名思义， &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>为InnerSource社区做出了贡献。这些贡献可能是代码或非代码工件，例如错误报告，功能请求或文档。&lt;/p></description></item><item><title>开场</title><link>https://innersourcecommons.org/zh/learn/learning-path/product-owner/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/product-owner/01/</guid><description>&lt;div class="paragraph">
&lt;p>嘿，中层经理，产品负责人和程序经理。
您想领导更快乐，更有效的团队吗？
您是否想成为领导者，而不想成为报告地狱的簿记员？
通过在我公司实施InnerSource流程，我们能够重构几个大型系统，这些系统的中断驱动开发率约为80％。
我们都知道要管理的环境有多么困难，更不用说开发了。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>通过InnerSource流程，我们还在不到一年的时间内完成了数十年的内部累积积压功能。InnerSource的关键要素是开放的。这打破了大多数公司团队陷入的孤岛困境。
我们将讨论使之成为现实的基本InnerSource技术，从而为我们节省了无数的管理和开发人员的时间。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>你好我叫Silona Bonewald，我是PayPal的总监。在InnerSource流程中，我已经成功地培训了40多个团队和1,500人。 我也定期参加在InnerSource Commons演讲。请加入我们。请查看 &lt;a href="http://innersourcecommons.org/">innersourcecommons.org&lt;/a>。您也可以在 &lt;a href="http://innersourcecommons.org/checklist">innersourcecommons.org/checklist&lt;/a>上获得我与O&amp;#8217;Reilly撰写的小册子。它比此视频具有更多细节。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>请先观看其他视频。
请参阅下面的链接，这将帮助你熟悉敏捷或精益流程。并且在观看此视频之前，请先了解下面链接中描述的角色 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/trusted-committer">&lt;em>Trusted Committers&lt;/em>&lt;/a>和 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributors）&lt;/em>&lt;/a>。谢谢。&lt;/p>
&lt;/div>
&lt;!--- This file autogenerated from https://github.com/InnerSourceCommons/InnerSourceLearningPath/blob/main/scripts --></description></item><item><title>InnerSource解决的问题?</title><link>https://innersourcecommons.org/zh/learn/learning-path/introduction/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/introduction/02/</guid><description>&lt;div class="paragraph">
&lt;p>=&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>无论员工在公司组织结构中的位置如何，InnerSource鼓励并奖励与任何人的协作和代码的重用。这种方法与传统组织中看到的不同，传统组织中的思想和工作产品往往被困在内部企业层级结构及约束的边界内。让我们来探讨一个例子来说明这个想法。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>想象一下，同一公司的两个团队交付不同的软件，其中一个团队的软件依赖于另一个团队的软件。例如，用户体验依赖于API服务来检索显示的数据。这种情况在大型企业中很常见，在大型企业中，单个团队生产的软件可能有几十个或几百个消费者。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>当软件消费团队(consuming team)需要许多特性时，软件生产团队(producing team)通常自身有一些需求和优先级流程来决定他们将开发哪些特性。对于重要的特性请求，如果没有按照当前工作的优先级排序，消费团队通常会选择3个选项中的一个，每个选项都有自己的缺点。&lt;/p>
&lt;/div>
&lt;div class="olist arabic">
&lt;ol class="arabic">
&lt;li>
&lt;p>&lt;strong>等待结果&lt;/strong>。消费团队可能什么也不做，没有进入排期的需求只能艰难前行。通常这种特性需求只占用消费团队最少的工作量。从实现特性带来的收益来说，等待可能没什么问题。然而，它可能带来真正的痛苦是所要求的功能从未被交付。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>变通方案&lt;/strong>。一个不愿意等待的消费团队可能会在其他地方做额外的工作来弥补他们所需特性的缺失。这些额外的工作可能会随着使用项目的变化而出现。或者，他们可以创建一个新的项目来满足他们的需求，并替换他们对提供团队的全部或部分系统的使用(代码/项目复制)。这种策略只允许消费团队通过自己的努力来获得所请求的特性。不过它也有几个缺点：&lt;/p>
&lt;div class="olist loweralpha">
&lt;ol class="loweralpha" type="a">
&lt;li>
&lt;p>对于具有相同功能请求的任何其他使用者，消费团队所做的任何工作都是不可用的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>消费团队无意中承担了维护新编写的代码的长期负担，这不在他们的核心团队能力范围内。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对于整个公司来说，同一个问题空间存在重复的项目和代码。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>问题升级&lt;/strong>。消费团队可能不会接受生产团队的“不”的答案，相反，他们会建议生产者管理阶层的某个人去影响(或强迫)提供团队去做这项工作。这个选项听起来对消费团队很有吸引力，因为他们无需执行或维护就可以获得他们要求的特性。尽管如此，它仍然是消费团队的累赘，因为它必然会将他们的一些注意力和工作转移到问题升级的非工程任务上。此外，这个选项不具有可伸缩性，因为在破坏消费者在公司的信誉之前，消费者只能提出几次特性请求的问题升级。对于提供团队来说，问题升级也具有类似的破坏性(甚至更严重)，他们正常的工作流程和需求优先级处理了将会被打断，用以处理升级的特性请求。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;div class="paragraph">
&lt;p>这一讨论为InnerSource奠定了基础。InnerSource适用于消费团队的个性需求得不到满足的情况。InnerSource为团队提供了一种方法，使他们能够避免 &lt;em>等待结果&lt;/em>、&lt;em>变通方案&lt;/em> 和 &lt;em>问题升级&lt;/em> 所带来的问题同时实现自己特性需要。&lt;/p></description></item><item><title>成为一名 InnerSource 贡献者（Contributor ）</title><link>https://innersourcecommons.org/zh/learn/learning-path/contributor/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/contributor/02/</guid><description>&lt;div class="paragraph">
&lt;p>InnerSource 贡献者在常规的团队边界之外运作，他们是跨越组织性孤岛的纽带。因此，他们需要了解一些使这项工作更有效的常见做法。&lt;/p>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_分享的心态">分享的心态&lt;/h3>
&lt;div class="paragraph">
&lt;p>你正在为你团队的产品实现一个新功能，你需要一些新功能才能使此功能正常工作。与其直接做，不如慢下来先想一想：这个功能是否反映了一个普遍的问题？在共享的业务领域里，你的组织中的其他团队也会面对这种情况吗？是否与你的需求刚好一致？如果有适用的，那么请在你的团队处理之前找到：是否有可以使用或改进以满足需求的共享的解决方案？应该有吧？&lt;/p>
&lt;/div>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_共享解决方案的好处">共享解决方案的好处&lt;/h3>
&lt;div class="paragraph">
&lt;p>非洲有句谚语说：“如果你想走得快，就一个人走吧。如果你想走得更远，就一起走。” 软件开发团队也是如此：&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>如果你想快速行动，独立行动是个好主意。这样做的缺点是重复造轮子。特别是在重新实现核心逻辑时，重复实现将付出比独立行动所带来好处更高的代价。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>与其他团队协作可以分担你的开发成本。就像在开源项目中一样，它可以让你的团队构建比你独立完成的更大的东西。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>但每个团队都有不同的产品路线图和规划！我以前尝试过使用共享组件——它们的集成时间总是比我重新实现它们所需要的时间长。这些组件总是在某些方面有所欠缺——我的特性请求从来没有在其他团队的路线图上得到优先权！&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>与传统项目不同，InnerSource 项目有贡献者这个角色。是的，有时你希望这些共享的解决方案有新功能，作为一名贡献者，你可以自由地查看这些组件的源代码，对其进行修改并使用最终的改进版本。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>是的，有时候你会迫切需要在按照你的进度要求修复错误，而这个问题在社区维护团队中没有得到相同的优先级。成为一名贡献者你可以自己行动并为团队修复这个错误。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>对于许多人来说，这种工作方式需要改变心态：与其等待功能的实现或bug的修复，不如解决问题。现在有了第三种解决方案。花时间和精力与InnerSource项目一起核对您的需求是什么——然后直接在共享项目中进行更改。因此，除了你的编程技能，你还需要沟通技能，才能在一个内源项目中取得成功——清晰地表达你的需求，并找到一个对你的团队和项目团队都有效的解决方案。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>“但是，我可以直接生成项目副本（fork)，在那里进行更改，并避免所有协调工作！”当然，生成项目副本是完成工作的一种方式。但从长远来看，这意味着你要为你的团队维护这个项目副本——并将你的改动推进到项目维护团队做的任何新版本中。将你的更改贡献给项目团队也意味着你可以从他们对组件的深入了解中获益。他们会在你的补丁中发现问题，以防这些问题在生产中显现出来。&lt;/p></description></item><item><title>成为中层管理人员有多困难</title><link>https://innersourcecommons.org/zh/learn/learning-path/product-owner/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/product-owner/02/</guid><description>&lt;div class="paragraph">
&lt;p>首先让我先从与产品负责人或中层管理人员说起。
你们扮演角色很难，而且统计数据表明了这一点。如果您用Google搜索“中层管理人员（middle management）”，那么大多数结果都在说就是从事这个职位有多难。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>这是统计数据。中层管理者比上级或下属有更高的抑郁和焦虑率。超过一半的人说，他们一直在担心。
《哈佛商业评论》对32万多名员工的调查显示，中层管理人员的工作满意度排在最后5％。哎哟!&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>为了解释我发现的一个常见抱怨，中层管理人员通常负责执行高层管理人员的愿景，但没有参与这些愿景的创建。对于需要领导才能的人，激励他人是非常重要的特质。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>在阅读多项研究后发现的前五项抱怨是：&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>第一，继承产品混乱和功能失调的团队。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第二，没有灵活性，创造空间很小。通常，这没有明确的前进道路。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第三，也是我个人最需要处理的问题，是处理政治和内斗的压力。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第四，中层管理人员很少为这项工作而赞誉。这不仅仅是成就。高层管理人员只专注于下一步工作，而往往忽略了他们改变目标或选择不可能的期限的事实。因此，这似乎不全是一个的给予赞誉的问题。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>最后，第五名最像是书记员或执行者，而不是拥有成为真正领导者的自由。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="paragraph">
&lt;p>我说对了吗？你是否同意我的观点？在下面的评论中让我知道我忘记了什么。这些抱怨是我决定在InnerSource上工作的原因，因为作为中层经理，我已经带你走了几英里。
因此，让我们再谈谈InnerSource如何帮助您解决其中一些问题。&lt;/p>
&lt;/div>
&lt;!--- This file autogenerated from https://github.com/InnerSourceCommons/InnerSourceLearningPath/blob/main/scripts --></description></item><item><title>确保产品质量</title><link>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/02/</guid><description>&lt;div class="paragraph">
&lt;p>让我们从与Trusted Committer角色最经常相关的责任开始讨论：确保产品质量。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>在InnerSource社区中，Trusted Committer拥有所有与技术有关的决策权，尤其是与产品质量有关的决策权。这意味着他们需要确保社区内成员在遵循这些决策。这包括在社区内部和外部进行交流，并在必要时公示这些决策。但是，Trusted Committer并不一定要自己做出所有与技术相关的决定，也不一定要负责所有的执行工作。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Trusted Committer的工作是在其社区中交流和阐明质量标准，并以 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>可理解和可操作的方式制定这些标准。这其中当然会包括书写文档，但是我们认为可信提交者传达这些质量标准的最有效方法是举例子。我们认为，InnerSource社区尝试将自己与传统软件开发项目区分开来，不仅在于他们组织开发的方式，而且还包括他们生产的软件的质量，这是一个非常有价值的目标。高水平的软件质量对于在InnerSource社区中建立和维持部分用户及其管理层的信任至关重要。我们都知道低质量的发布是会打击人们对社区的信任感的。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Trusted Committer还需要确保社区拥有生产高质量软件所需的基础结构和工具。同行评审通常会作为拉取请求（PRs）的一部分，通常用于确保质量。尽管每个人都可以通过提出重要的进展来启动和参与项目，但是通常只有Trusted Committer才能最终接受、合并或拒绝贡献。这就是我们早先所说的“Trusted Committer可以将代码推向生产环境”的意思。Trusted Committer还应该在PR期间确认贡献者不要超过截止日期进行贡献。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>也就是说，实现这一目标最终是 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>的工作。Trusted Committer的工作不是默认接受所有贡献，而仅接受在质量和范围方面符合定义标准的贡献。Trusted Committer应避免重写贡献者的代码去让它们尽可能符合规定，即使这意味着要花费更多时间在PR中为 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>提供支持。Trusted Committer应具有长远的眼光，并了解这种支持是对社区的一种长期投资，从长远来看，它将提高社区的发展速度。&lt;/p></description></item><item><title>InnerSource 中内建的主要收益</title><link>https://innersourcecommons.org/zh/learn/learning-path/product-owner/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/product-owner/03/</guid><description>&lt;div class="paragraph">
&lt;p>在 &lt;a href="http://innersourcecommons.org/">InnerSource Commons&lt;/a>中，我们将基于我们在开源中学习到的经验讨论_open_的概念，以及如何在企业环境中应用我们的所知或所学。
让我从经理的角度逐步讲解其中的一些内容。我将谈论他们如何使我作为总监和我的产品经理受益，这就是我们在PayPal所称的产品所有者。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>首先是_open code_。开放代码是什么意思？基本上，该代码对所有公司都是可见的，并且其他开发人员可以通过一个过程在其他代码库上提交拉取请求（pull request）并使它们被接受。要了解更多信息，请参阅有关 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/trusted-committer">&lt;em>Trusted Committers&lt;/em>&lt;/a>的文章，以及有关更多有关贡献相关的细节。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>对于经理来说开放代码也意味着您无需再等待或上升问题就可以修复错误或在其他团队的代码库上实现功能。
您可以开始更高效地实施和计划。
通常，您团队的问题（或功能）可能不是该其他团队的最高优先级的问题。
您不再需要依靠把问题上升到高层管理人员和政治手段来来与支持团队进行沟通。
相反，您拥有更大的权力在你的团队的确定问题优先级并减少对他人的依赖。
有时由于学习曲线而可能需要更长的时间。但是，作为一个团队，这是一直需要突破瓶颈。这样您可以从容地完成那些积压了多年的用户故事。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>&lt;em>开放计划（Open planning）&lt;/em> 每个人都可以在这里以开放和标准化的方式发布其计划过程。
在PayPal，我们拥有UPE标准。它代表统一产品体验。
它包括一个技术中心，所有团队均可在其中发布路线图和进行冲刺计划的电子表格。每个人都知道这些文档在各个产品中的位置。&lt;/p></description></item><item><title>InnerSource如何运作?</title><link>https://innersourcecommons.org/zh/learn/learning-path/introduction/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/introduction/03/</guid><description>&lt;div class="paragraph">
&lt;p>=&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>假设团队A使用的软件是由团队B生产的。团队A给团队B提交了一个特性需求，但团队B无法在团队A要求的时间内及时实现该功能。在InnerSource设置中，如果团队A不能得到这个特性请求，它会提一个提拉请求(Pull Request, 简称PR)代替。也就是说，团队A直接在团队B的软件中实现该功能，并提交一个带有代码更改的拉请求。团队B合作伙伴审查并接受提交的代码。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>在这个例子中，我们称团队A为 &lt;em>调用(Guest)&lt;/em> 团队 ，称团队B为 &lt;em>维护(Host)&lt;/em> 团队 。 &lt;em>协同（Guest）&lt;/em> 和 &lt;em>主导（Host）&lt;/em> 这两个术语暗示了一种类似于在家里接待客人的情况。在这种情况下，大多数人都想成为一个好主人。为了迎接协同方的到来，他们确保所有的东西都保持整洁。来访者在门口受到欢迎并被邀请进来。他们可以使用家中公共区域的功能和公用设施。可能会有一些客人被要求遵守的家规。同样的，大多数客人也想表现出对家庭和主人的尊重。他们对房子里的东西很小心，在他们逗留期间遵守规则。只要他们有礼貌，他们就会希望收到新的访问邀请。这些围绕着家访的概念是一个隐喻，它是团队在一个主导向另一个协同贡献代码库时应该采取的态度和行为。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>让我们仔细看看InnerSource的流程机制是如何工作的。为了帮助解释，我们将列出调用团队和维护团队中的几个关键人物。首先， &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/product-owner">&lt;em>产品所有者（Product Owner）&lt;/em>&lt;/a> 确定维护团队愿意接受哪些功能作为贡献。 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a> 是调用团队中提交代码贡献以供主人团队评审的个人。 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/trusted-committer">&lt;em>Trusted Committer&lt;/em>&lt;/a> 代表维护团队在提供一个成功的拉取请求所需的任何及时支持和指导。在小规模的基层工作中，一个人通常同时担任产品所有者和受信任提交者的角色。&lt;/p></description></item><item><title>保持社区健康</title><link>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/03/</guid><description>&lt;div class="paragraph">
&lt;p>导言指出，Trusted Committer既要承担技术责任，又要承担社区责任。仅关注代码和代码健康是不够的。为了实现长期的目标，Trusted Committers应该努力保持软件构建社区的健康。因此，他们必须在确保产品质量和保持健康社区之间取得平衡。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>健康的社区是什么样的？很简单，在一个健康的社区中， &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>往往会持续进行贡献，将大部分时间花费在开发软件上，并从中提升自己的能力。这样的话，一个健康的社区将能不断发展。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>为什么 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>会加入并停留在社区中？有些人这样做是因为他们认同社区的宗旨或使命。清楚地表达和贯彻社区的宗旨是Trusted Committer的工作。人们通常认识不到这一点的重要性，但在营销社区及其产品的过程中，这确实是必不可少的。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>人们留下来的另一个更关键的原因是，他们喜欢与社区中的其他成员（包括Trusted Committer）一起工作。在一个繁荣的社区里成员间通常会相互尊重和相互沟通。贡献被视为馈赠或付出，而不是娱乐，而出色的（尤其是NO.1） &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>通常会受到称赞。Trusted Committer在所有这方面的工作主要是为他人树立榜样，就是为预期的软件质量水平树立榜样。如有必要，Trusted Committer 可以为社区制定并制定行为准则。如果有某些社区成员的行为对社区健康有所损害，那么Trusted Committer有责任去解决此类问题。Trusted Committer应为人们创造机会，使他们能够定期（线上或线下）聚在一起，彼此了解并在有冲突时和平解决。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>如果人们还倾向于留在社区里，证明他们知道在InnerSource社区工作是获得新技能和个人成长的绝好机会。这其实是Trusted Committer的角色真正重要的地方。Trusted Committer通常会成为初级开发人员的指导者，并且在PR期间去指出需要改进的地方，还详细说明了为什么需要改进以及如何进行改进。他们提供了更改背后的理论或经验，并为更改的最佳方法提供了建议。这样，Trusted Committer可以提高成员社区中的学习速度，远远超过他们在传统软件开发项目中的学习速度。&lt;/p></description></item><item><title>贡献者精神</title><link>https://innersourcecommons.org/zh/learn/learning-path/contributor/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/contributor/03/</guid><description>&lt;div class="paragraph">
&lt;p>在上一篇文章中，我们已经概述了为什么要重用组件并成为活跃的贡献者。本文将与你分享如何成功地将更改提交到项目团队的代码库。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>一个 InnerSource 贡献者试图对项目维护团队做出贡献，本质上就是项目维护团队的客人。一般来说，一个好的客人应该有特定的行为方式：&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>● 敲门。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>● 预测并遵守家规。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>● 明白自己不是房主，并据此行事。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>这些如何适用于 InnerSource 项目？&lt;/p>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_进入">进入&lt;/h3>
&lt;div class="paragraph">
&lt;p>拜访邻居时，即使门开着你也不会未经敲门或按门铃就擅自进入。同样的，身为 InnerSource 的房客你将无法（或被邀请）直接将代码提交到代码库中。&lt;/p></description></item><item><title>InnerSource的收益?</title><link>https://innersourcecommons.org/zh/learn/learning-path/introduction/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/introduction/04/</guid><description>&lt;div class="paragraph">
&lt;p>=&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>通过InnerSource进行协作有很多好处。
InnerSource为公司提供了一个可扩展的策略，以便 &lt;strong>调用团队(guest team)在需要的时候获得特性请求&lt;/strong> ，而无需承担长期的维护负担。
当调用团队的时间被放入其他人可以使用的代码中时，整个公司就赢了。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>虽然这个结果是来自InnerSource的一个闪亮好处，但是对于那些定期接受内部资源贡献的维护团队(host team)来说有很多好处。
回想一下，作为InnerSource过程的一部分，维护团队的产品所有者从一开始就认为贡献的特性是好的和可取的。
InnerSource允许维护团队获得帮助，并为它的用户 &lt;strong>打造更好的产品&lt;/strong> !&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>InnerSource &lt;strong>为维护团队提供了一种可伸缩的策略&lt;/strong> ，用于满足来自其众多客户的不同数量的功能需求。
考虑到维护团队全职成员的固定容量，很可能在某些时候，其消费者的组合业务路线图将需要(甚至不合理地)在维护团队的产品中完成大量的工作。
如果没有内部资源，这种情况很容易导致因为问题升级至维护团队领导，而让一个压力大、工作过度的团队处理更多特性请求。&lt;/p></description></item><item><title>贡献机制</title><link>https://innersourcecommons.org/zh/learn/learning-path/contributor/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/contributor/04/</guid><description>&lt;div class="paragraph">
&lt;p>你准备好开始为其他团队项目/仓库做出贡献了吗？你是否希望通过协作而不是通过管理升级来减少阻碍？本节给出了实用的建议，并重点介绍了在 为InnerSource 做出贡献时要记住的问题。它使你和项目团队有尽可能的愉快的体验，为更多的贡献和伟大的合作奠定基础。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>本文分为你可能会经历的三个步骤&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;a href="#preparing-to-work">争取你的贡献机会并准备开始工作&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#creating-the-pull-request">实际创造贡献&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#submitting-the-pull-request">完善你的工作,并将其呈现给项目团队&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="paragraph">
&lt;p>当你的贡献和目标越来越多，你可能会重复地经历其中一些步骤。很有可能当你这样做的时候，一切都会变得越来越自然——也许你甚至会奇怪你什么时候做过那些步骤。&lt;/p>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="preparing-to-work">准备工作&lt;/h3>
&lt;div class="sect3">
&lt;h4 id="_交付周期">交付周期&lt;/h4>
&lt;div class="paragraph">
&lt;p>一个关键的区别是项周转时间。每当你有第一次贡献的时候，你都会加入一个新的（维护）团队。因此，你需要了解他们的代码、所使用的技术以及他们喜欢的开发环境（比如测试框架、构建系统）。即使在这种类型的工具已标准化的情况下，每个团队也会开发出一些单独的特性。除了技术方面，你可能面临沟通上的分歧（比如代码评审）。即使当你过一段时间再回来，团队的工作方式和成员可能已经改变了。你得花点时间去了解一个你很久没见的朋友，因为你现在正要去拜访他。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>给自己足够的准备时间。尽早开始，这样你的努力就可以在你需要的时候发挥作用。最好在先享受你的空闲时光——当你和维护团队一起工作时，你会对项目周转时间有更明显的感觉。通常，你会注意到，在为维护团队做出一些成功的贡献之后，维护团队的项目周转时间都会减少。在开源项目中也是一样，你可以在 &lt;a href="#buildup-of-trust-through-collaboration">这里&lt;/a> 阅读更多关于它的内容。&lt;/p>
&lt;/div>
&lt;/div>
&lt;div class="sect3">
&lt;h4 id="_期望管理">期望管理&lt;/h4>
&lt;div class="paragraph">
&lt;p>在你以往的团队中，每个人都对预期的交付周期有一个概念。在InnerSource中可能不是这样的，这可能是由于时差较大（例如美国西雅图的PDT与德国柏林的CEST）或你将不能像以往的团队一样全职工作，即使你们在一个地区。因此，为了防止双方都感到沮丧、不耐烦和其他不信任的影响，你需要明确地对自己的预期的反应时间进行期望管理。一种方法是快速的回复 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/trusted-committer">&lt;em>Trusted Committer&lt;/em>&lt;/a> ：“我得过几天后才能看看”，如果你知道你得几天后才有空。理想情况下，当你有空时可以给他们一个粗略的时间预估。这样做即使在非物理接触，在更长的距离或其他异步媒介上也可以通过可靠性建立信任。建立起的信任会让你克服合作道路上的不确定性。&lt;/p></description></item><item><title>牵引社区成员</title><link>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/04/</guid><description>&lt;div class="paragraph">
&lt;p>在InnerSource社区中会存在有一个深入参与的过程。期间一定会有不了解这个社区的阶段。首先，新手可能对社区和社区内的产品感兴趣，但尚未使用过它。然后会有使用过产品但没有贡献过的用户。然后是至少做出过一次贡献的 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>，最后是负责整体软件和社区的Trusted Committer。作为Trusted Committer，您有责任令社区成员沿着这一连续性前进，并提升他们的贡献能力。从这个意义上讲，Trusted Committer在其社区中充当力量倍增器。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>对于Trusted Committer而言，产品营销和社区增加新用户和消费者数量非常重要。他们还应该通过与消费者保持交流去引导他们做出贡献，并尝试牵引潜在 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>的利益，并使之与社区的利益保持一致。通常，有效的办法是，让 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>参与贡献的是有益于其部门或公司角色的工作。开发工具和自动化就是很好的例子。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>最后，Trusted Committer有责任在鼓励大家完成挑战性任务、指导他们完成工作的过程中，来识别和支持有成长潜力的贡献者。我们认为，这是Trusted Committer的最高责任，对于Trusted Committer和 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>来说都是非常有价值的。我们听过一些Trusted Committer说，指导和推动人们去提升自己的能力，比花时间在编写软件上更重要。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>如 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/03/">&lt;em>上一章节&lt;/em>&lt;/a>所述，学习和个人成长是人们加入并坚持留在InnerSource社区的原因。而提升 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>的质量和数量是让他们留下的最有效方式之一，Trusted Committer可以使用它们来提高其社区的发展速度、产出和寿命。这也是说服管理层让其员工参与InnerSource社区的主要论据之一，因为这将使他们的员工对公司整体更有价值，并帮助他们保留顶尖人才。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>总而言之，Trusted Committer需要吸引新的 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>，并提高其贡献能力。这可以让社区更快更好地产出。Trusted Committer通过交流做出贡献，以及帮助 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>成长来实现这一点。&lt;/p></description></item><item><title>新角色和新职责</title><link>https://innersourcecommons.org/zh/learn/learning-path/product-owner/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/product-owner/04/</guid><description>&lt;div class="paragraph">
&lt;p>成为InnerSource领导者会带来新的角色和责任。
其中第一个支持您的TC。 TC是 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/trusted-committer">&lt;em>Trusted Committers&lt;/em>&lt;/a>的简称。
您要做的第一件事可能是帮助选择那些新的TC，并为其提供支持。如果您想进一步了解TC的角色，请查看 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/trusted-committer">&lt;em>Trusted Committer&lt;/em>&lt;/a>部分。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>他们是您代码库的守护人。
通常，他们是主要开发人员，他们擅长代码审查，并且对代码库的体系结构有深刻的理解。
他们将需要您的支持。
在与其他团队合作方面，他们也将是您的关键。
在评估和集成方面，他们将是您的得力助手。记住要支持他们。他们承担着一些疯狂的新职责，可能需要接受指导以帮助 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者团队&lt;/em>&lt;/a>。开发者经常没有接受过如何谈判的培训。我推荐这本书 &lt;a href="https://www.amazon.com/Getting-Yes-Negotiating-Agreement-Without/dp/0143118757/">Getting to Yes&lt;/a>，供您与他们一起使用。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>其次，其他产品所有者。
现在，您将与其他产品负责人打交道，尤其是要满足有关谈判和协作的新时间承诺。
这需要时间。您也需要扮演导师的角色。
您可能需要指导其他产品所有者，尤其是那些新手。您使用的流程也可能与他们的不同。没关系的。&lt;/p></description></item><item><title>InnerSource的原则</title><link>https://innersourcecommons.org/zh/learn/learning-path/introduction/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/introduction/05/</guid><description>&lt;div class="paragraph">
&lt;p>=&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>每个公司、团队、项目和个人都是不同的。由于这个事实，内部源的工作方式在不同的情况下会有所不同。
然而，其核心是构成任何成功的InnerSource实例的四个原则。
这些原则对成功的开源项目有启发，为了使InnerSource获得前面描述的好处，这些原则是必需的，它包括：&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;strong>开放&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>透明度&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>优先辅导&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>自愿贡献&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="paragraph">
&lt;p>让我们更详细地看看这些原则：&lt;/p>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_开放">开放&lt;/h3>
&lt;div class="paragraph">
&lt;p>开放式项目的配置可以实现无摩擦贡献。项目应该通过在主仓库的 README.md 和 如何贡献.md中被发现，并得到良好的文档记录。
组织中的任何人都应该能够找到想要的项目，并且不需要过多的来自维护团队(host team)成员的直接指导。
维护团队的联系信息应该在对项目有意义的尽可能多的渠道中流行。宿主团队接受来自内部的对项目的贡献的意图应该通过相关组织渠道来共享，以提高意识。
特别是在较小的设置中，您可能希望在您的团队正在进行的内部源工作上建立一个定期的“广播”。
但是，在较大的环境中，这样的广播可能会产生很多噪音，而且更适合确保项目可以在一个易于使用的工具中被发现。
记住，我们的目标是让员工意识到，要利用 &lt;em>本公司&lt;/em> 的适当渠道。&lt;/p></description></item><item><title>成为InnerSource贡献者（Contributor）的好处</title><link>https://innersourcecommons.org/zh/learn/learning-path/contributor/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/contributor/05/</guid><description>&lt;div class="paragraph">
&lt;p>贡献者是InnerSource项目的生命之源。每个InnerSource的项目，都有最终目标，就是超越最初的创始人，扩大他们的组织 和 调动用户之间更进一步合作的潜在性。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>然而，是什么促使一个开发人员花时间在非本职工作的项目上？怎样才能激励其领导为他们的开发人员腾出时间来改进不在他们职权范围内的项目？&lt;/p>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_个人的动力">个人的动力&lt;/h3>
&lt;div class="paragraph">
&lt;p>最明显的激励是吸引早期贡献者加入开源。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>还记得你一直在处理的那个讨厌的错误吗？在维护为它们而做的替代解决方案上花费了很多时间和精力？如果不是等待上游团队在将来某个时候修复这个问题，而是你自己去动手修复它呢？在这种“自己抓痒”的情况下，第一次贡献的人通常从修复他们日常工作所依赖的项目中的问题开始，以减少他们自己代码库中的替代方案的数量。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>在决定是否创建和贡献一个解决方法而不是维护你自己的替代方案时，请想想这贡献将为你带来的好处。与其孤立地工作，不如和上游项目的人一起，他们不仅可以审查，还可以改进你的解决方案。你将获得支持和指导，这将大大加快你的开发工作。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>花更多的时间和他人一起工作，意味着随着时间的推移，你将了解团队如何工作，如何组织，以及以何种方式使用何种工具来构建他们的项目。通常情况下，你自己的项目会从这种经验中获益：在进行并将其引入你自己的项目之前，你能获得实践经验，而不是仅仅阅读一些新资料和构建系统。从事多个核心项目意味着你将接触到更大的生态系统，可以从中汲取最佳实践和解决方案来应对挑战。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>在其他团队中花费一些时间的一个好处是，可以将你的声誉和影响力扩大到自己团队以外。因此，除了向他人学习和自我成长外，你还可以影响项目。你可以通过你的贡献，和分享你在项目中的工具化和部署方面的经验和知识，来产生影响力。这种共享可以帮助上游项目改进和加快开发周期。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>除了所有这些客观标准外，还有一个很难度量的，这在 InnerSource 和开源项目中都有报道：人们之所以参与这些项目是因为他们发现这些项目的工作很有个人成就感和乐趣。最有可能的是，能够真正自主选择要做的任务，这一点确实很重要。这种自我选择通常也会导致上游项目的人非常欢迎和支持他们的工作，以保持贡献者的积极性。&lt;/p>
&lt;/div>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_团队层面的动力">团队层面的动力&lt;/h3>
&lt;div class="paragraph">
&lt;p>还记得那个最终被上游团队所修复的恼人的bug吗？为什么你的团队要花费额外的精力来为上游项目修复bug呢？&lt;/p></description></item><item><title>降低准入门槛</title><link>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/05/</guid><description>&lt;div class="paragraph">
&lt;p>在InnerSource社区中征求贡献比在OpenSource社区中征求更具挑战性，原因有：&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>InnerSource社区中潜在的 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者(Contributor)&lt;/em>&lt;/a>数量很少。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">贡献者 Contributor_&lt;/a>会想要在他们的工作时间内做出贡献，省下他们的休息时间。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在InnerSource中工作不一定会是 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>工作正式绩效目标的一部分，因此在Inner Source上工作花费时间和精力，可能会影响到他们实现本身的绩效。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="paragraph">
&lt;p>这就是为什么对于Trusted Committer而言，使潜在 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>向贡献者成长的重要性。有很多事情可以帮助到您实现这个目的：&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>在每个代码存储库中都会有一个README.md。优秀的README.md解释了代码库中的内容及其用途。此外，它应提供有关如何获取，构建，测试和使用代码库中软件的详细说明，包括有关许可证的信息。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>拥有一个良好的CONTRIBUTING.md，其中概述了 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>的期望。它应回答常见问题，例如：&lt;/p>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>如何提交错误报告或功能请求？&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如有疑问，应与谁联系，如何联系？&lt;/p>
&lt;/li>
&lt;li>
&lt;p>代码样式，分支或提交消息的约定是什么？&lt;/p>
&lt;/li>
&lt;li>
&lt;p>贡献“完成”的定义是什么？&lt;/p>
&lt;/li>
&lt;li>
&lt;p>有哪些管理贡献的流程步骤？&lt;/p></description></item><item><title>总结和要点</title><link>https://innersourcecommons.org/zh/learn/learning-path/product-owner/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/product-owner/05/</guid><description>&lt;div class="paragraph">
&lt;p>为了总结我们在本文中讨论的内容，我想做一个快速回顾。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>首先，要善良。中层管理人员很艰难。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>接下来，谈谈我们讨论过的一些主要好处。
我们讨论许多关于InnerSource如何消除瓶颈的方法。
我们还讨论了如何获得更多的责任并获得更多控制权，成为一名中层经理。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>而且，您可以与同行进行更多协作，以更少的钱完成更多的工作，以便您可以实际处理这些重复的工作。
开放的流程还意味着您比以前可能获得的更多功劳。
通过经历并发布这些计划流程，这也意味着您可以减少政治事务，因为一切都变得更加清晰。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>最后，您将拥有这些新的角色和职责，例如支持新的 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/trusted-committer">&lt;em>Trusted Committers&lt;/em>&lt;/a>。
他们真的需要您的帮助。
此外，与其他产品负责人一起工作，以便你们俩都能在更快的时间内完成更多工作。
关于新文档，这将不得不花费大量时间，但这没关系，因为您将因此而获得更多的荣誉。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>此外，借助内部营销，您还需要在这里学习新技能。
但是，一旦掌握了它，您将拥有更多的资源来完成工作。&lt;/p></description></item><item><title>闭幕</title><link>https://innersourcecommons.org/zh/learn/learning-path/product-owner/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/product-owner/06/</guid><description>&lt;div class="paragraph">
&lt;p>请通过 &lt;a href="http://innersourcecommons.org/">innersourcecommon.org&lt;/a>与我们联系，在线加入我们。
我们有一个由80多家公司组成的非常活跃的社区。其中许多是《财富》 500强公司。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>如果您还没有看过其他视频，还应该观看。
它们包含在公司中实施InnerSource流程所需的一些第一步。
他们还负责一些角色，例如trusted committee，还有一些文档，例如创建您的第一个贡献协议。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>如果您想阅读我的书，请访问 &lt;a href="http://innersourcecommons.org/checklist/">innersourcecommons.org/checklist&lt;/a>。
对于您的所有产品负责人而言，本书的后半部分将涉及很多事情，并且需要执行和实施。
请在innersourcecommons.org上找到我们，或者您也可以在Twitter，Facebook和LinkedIn上找到我们。另外，如果您想与我联系以进一步讨论，请在 &lt;a href="http://silona.org/">silona.com&lt;/a>中找到我。我也在Twitter上与大家交流。&lt;/p>
&lt;/div>
&lt;!--- This file autogenerated from https://github.com/InnerSourceCommons/InnerSourceLearningPath/blob/main/scripts --></description></item><item><title>倡导社区需求</title><link>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/06/</guid><description>&lt;div class="paragraph">
&lt;p>InnerSource社区存在于公司内部协作的环境中，因此比开放源社区更受限制。有时，人们业务部门的利益与社区的利益并不一致。Trusted Committer对项目应有长远的安排和打算，他们了解健康的社区是健康代码的前提。这就是为什么许多InnerSource初始团队都以Apache Way的座右铭 &lt;a href="http://theapacheway.com/community-over-code/">&lt;em>Community over code.&lt;/em>&lt;/a> 为指引的原因。另一方面，业务部门也会自然地关注InnerSource社区生产的产品。他们希望看到在短期或中期内，这能帮助企业提高利润。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>在此潜在的冲突中，Trusted Committer将发挥至关重要的作用。Trusted Committer与组织建立了信任，并在此信任的基础上，倡导维护社区利益和保持公司软件的长期健康。他们负责传达技术风险以及与社区有关的管理风险。同时，Trusted Committer需要具有战略视角，并在其公司的容忍度、自由度内工作。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Trusted Committer还需要确保社区和个人贡献者的工作获得公众认可。公共信誉是用来支付贡献者，特别是自愿贡献者的货币。好的办法是公开表彰有价值的贡献者，并确保他的领导了解他们的贡献。忽视给予信誉可能会使个人贡献者感到沮丧，并损害社区的健康。这可能发生在尚未习惯InnerSource工作模式的公司中，或者当InnerSource社区开发的软件在后台运行，但管理人员根本不了解社区的贡献时。一个好的Trusted Committer将与管理层合作并倡导为公共信誉做贡献。不是出于恶意的抹杀贡献错误是很容易修复的。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>另一个需要Trusted Committer去重视的常见情况是，没有给 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>足够的时间或权限。当社区正在贡献者部门以外的产品上工作，因此与他们的工作目标无关时，就会发生这种情况。在这种情况下，Trusted Committer应与 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>的工作领导进行沟通，并寻找相应的替代方案。&lt;/p></description></item><item><title>结论</title><link>https://innersourcecommons.org/zh/learn/learning-path/contributor/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/contributor/06/</guid><description>&lt;div class="paragraph">
&lt;p>感谢你查看 InnerSource Commons 学习路径的贡献者 Contributor 部分。在本节中，你了解了贡献者角色——InnerSource 项目的生命之源。贡献者是由所有者团队外部的人员组成，他们为项目带来了额外的有价值的投入资源。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>在本节中，你了解了如何通过寻找机会做出贡献，从而成为贡献者。我们回顾了寻找或创造这种机会所需的心态和习惯。我们还讨论了这个角色的思想和一个可能可以成功贡献的建议方法。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>有了正确的心态、习惯和思想，仍然有一些细节可能会阻止你成功做出贡献——因此，我们更详细地讨论了这些具体细节。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>最后不得不提，要说服你的团队成员和你的组织可能很难，因此我们从不同的角度讨论了贡献的好处，以使这个过程对你来说容易。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>我们希望你喜欢观看视频 和/或 阅读文章，并能够从中获得一些有趣的新见解，从而成为一名优秀的贡献者。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>如果你还没有这样做，我们想邀请你在我们的 InnerSource 学习路径中了解更多关于 InnerSource 的其他方面： &lt;a href="https://innersourcecommons.org/learningpath/">&lt;em>http://innersourcecommons.org/learningpath/&lt;/em>&lt;/a>&lt;/p></description></item><item><title>结论</title><link>https://innersourcecommons.org/zh/learn/learning-path/introduction/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/introduction/06/</guid><description>&lt;div class="paragraph">
&lt;p>=
在这个学习过程中，我们已经介绍了InnerSource。
InnerSource将开放源码的最佳实践和原则应用于内部软件开发。
当维护团队（Host Team）无法交付所需的特性请求时，它为使用者提供了一个额外的选项。
成功的InnerSource包括来自 &lt;strong>维护团队&lt;/strong> 的 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/product-owner">&lt;em>产品所有者（Product Owner）&lt;/em>&lt;/a> 产品所有者和 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/trusted-committer">&lt;em>Trusted Committer&lt;/em>&lt;/a> ，
以及来自 &lt;strong>调用团队(Guest Team)&lt;/strong> 的 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a> 。
如果处理有效，InnerSource将为参与团队带来很多好处。有效的InnerSource可以带来 &lt;strong>自愿代码贡献&lt;/strong> 和 &lt;strong>优先指导&lt;/strong> 。&lt;/p></description></item><item><title>如何成为Trusted Committer</title><link>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/07/</guid><description>&lt;div class="paragraph">
&lt;p>社区对于Trusted Committer的要求是非常高的，但作为一个Trusted Committer，会让人非常有成就感。如果你想通过成为一个Trusted Committer得到成长，您可能会问：我要怎样成为一个Trusted Committer，我会是合适的人选吗？&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>InnerSource 社区遵循一些与开源社区相同的原则，其中之一就是精英制度。在精英制度中，权力取决于个人的才能、努力和成就。换句话说，就等同于是Trusted Committer角色附带的责任和特权是需要通过做贡献赢得的。透明度是另一个开源价值，它也发挥了至关重要的作用，因为它使人才的努力和成就对整个社区可见。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>正式成为Trusted Committer的过程每个社区都会有不同，主要取决于你在InnerSource中所处的社区，并且规则可能在不断变化。在基层社区中，创始人通常也自动承担Trusted Committer的角色。随着社区的发展，社区或现有的Trusted Committer可能会提名，并以投票的方式发展一名 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>成为Trusted Committer。理想情况下，被提名的贡献者需要自愿担任Trusted Committer角色，因为它需要大量的时间和奉献精神才能成功。&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>提名 &lt;a href="https://innersourcecommons.org/zh/learn/learning-path/contributor">&lt;em>贡献者（Contributor）&lt;/em>&lt;/a>成为Trusted Committer的标准是什么？成功履行Trusted Committer的职责需要做什么？首先，潜在的Trusted Committer需要在社区工作中表现出深厚的技术能力。除此之外，他们还必须证明自己有能力与社区中的同龄人进行有效沟通，以及最好能与产品所有者和管理层进行有效沟通，因为这是Trusted Committer角色的关键作用。&lt;/p></description></item><item><title>结论</title><link>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/zh/learn/learning-path/trusted-committer/08/</guid><description>&lt;div class="paragraph">
&lt;p>在上面的章节中，我们了解了 Trusted Committer 的职责，包括有：确保产品质量、保持社区健康、减少贡献障碍，以及提升社区等级并且在公司组织中宣传社区。我们还讨论了如何成为一个Trusted Committer，以及担任该角色需要做什么。作为一个 Trusted Committer，这将是一项艰巨的任务，但也是非常有成就感的，会帮助你扩大你的价值。 从这个意义上讲，我们希望本节可以启发到你，让你迈出成为 Trusted Committer的第一步。我们也希望这一部分可以帮助你的组织了解到，拥有强大的 Trusted Committer 对于任何 InnerSource 计划成功的重要性。 我们想要邀请您通过 InnerSource 学习路径中的其他文章和视频来了解有关 InnerSource 的更多信息。欢迎您访问 &lt;a href="http://innersourcecommons.org/">&lt;em>InnerSource Commons&lt;/em>&lt;/a>。&lt;/p></description></item></channel></rss>