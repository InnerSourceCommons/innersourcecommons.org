<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Einführung on InnerSource Commons</title><link>https://innersourcecommons.org/de/learn/learning-path/introduction/</link><description>Recent content in Einführung on InnerSource Commons</description><generator>Hugo</generator><language>de</language><atom:link href="https://innersourcecommons.org/de/learn/learning-path/introduction/index.xml" rel="self" type="application/rss+xml"/><item><title>Einführung</title><link>https://innersourcecommons.org/de/learn/learning-path/introduction/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/de/learn/learning-path/introduction/01/</guid><description>&lt;div class="paragraph">
&lt;p>Diese Learningpath Serie bietet eine Einführung in InnerSource.
InnerSource ist die Anwendung von Open-Source-Praktiken und -Prinzipien auf die Softwareentwicklung im Unternehmen.
Die InnerSource-Software bleibt dabei Eigentum des Unternehmens. Jeder Mitarbeiter kann sie nutzen und Verbesserungen oder Erweiterungen beitragen.
Diese Strategie ermöglicht eine breite und effektive Zusammenarbeit und führt zu Software, die sich schnell auf die sich ändernden Anforderungen der verschiedenen internen
Stakeholder einstellen und anpassen lässt.&lt;/p></description></item><item><title>Welche Probleme löst InnerSource?</title><link>https://innersourcecommons.org/de/learn/learning-path/introduction/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/de/learn/learning-path/introduction/02/</guid><description>&lt;div class="paragraph">
&lt;p>InnerSource fördert und belohnt die Zusammenarbeit und die Wiederverwendung von Code.
Jeder Mitarbeiter, unabhängig von seiner Position in der Organisationsstruktur eines Unternehmens, kann teilnehmen.
Dieser Ansatz unterscheidet sich von dem in traditionellen Organisationen, in denen Ideen und Produkte in der Regel innerhalb der Grenzen der internen Unternehmenshierarchie und ihrer Silos gefangen bleiben.
Lass uns eine Situation untersuchen, die ein Beispiel für diesen neuen Ansatz gibt.&lt;/p></description></item><item><title>Wie funktioniert InnerSource?</title><link>https://innersourcecommons.org/de/learn/learning-path/introduction/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/de/learn/learning-path/introduction/03/</guid><description>&lt;div class="paragraph">
&lt;p>Nehmen wir folgendes Szenario an: Team A verwendet Software, die von Team B produziert wird.
Team A übermittelt Anforderungen an Team B, aber Team B ist stark ausgelastet und kann diese nicht rechtzeitig implementieren.
InnerSource ermögicht Team A, anstatt einer Anforderung, einen PullRequest mit der eigenen Implementierung an Team B zu schicken.
Das heißt, Team A implementiert die Funktion direkt in der Software von Team B und sendet einen PullRequest mit den Codeänderungen.
Team B überprüft dann den übermittelten Code, überarbeitet ihn gegebenenfalls in enger Partnerschaft mit Team A und integriert die Änderungen sobald sie den Anforderungen entsprechen.&lt;/p></description></item><item><title>Worin liegen die Vorteile von InnerSource?</title><link>https://innersourcecommons.org/de/learn/learning-path/introduction/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/de/learn/learning-path/introduction/04/</guid><description>&lt;div class="paragraph">
&lt;p>Die Zusammenarbeit mit Hilfe von InnerSource bietet viele Vorteile.
InnerSource bietet einem Unternehmen eine skalierbare Strategie für &lt;strong>Gastteams, um Features zu dem Zeitpunkt zu erhalten, zu dem sie diese benötigen&lt;/strong>, ohne langfristig auch die Wartung übernehmen zu müssen.
Das Unternehmen als Ganzes gewinnt, da die Gastteams die so gewonnene Zeit anderen Aufgaben widmen können.&lt;/p></description></item><item><title>InnerSource-Prinzipien</title><link>https://innersourcecommons.org/de/learn/learning-path/introduction/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/de/learn/learning-path/introduction/05/</guid><description>&lt;div class="paragraph">
&lt;p>Jedes Unternehmen, Team, Projekt und Individuum ist verschieden.
Aus diesem Grund variiert die genaue Anwendung der InnerSource-Konzepte von Situation zu Situation.
Im Mittelpunkt stehen jedoch immer vier Prinzipien. Sie bilden das Fundament jeder erfolgreichen Anwendung von InnerSource.
Diese Prinzipien sind inspiriert durch erfolgreiche Open Source-Projekte und sind erforderlich damit InnerSource die zuvor beschriebenen Vorteile erzielt.&lt;/p></description></item><item><title>Schlusswort</title><link>https://innersourcecommons.org/de/learn/learning-path/introduction/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/de/learn/learning-path/introduction/06/</guid><description>&lt;div class="paragraph">
&lt;p>In dieser Serie haben wir eine Einführung in InnerSource gegeben.
InnerSource wendet Open Source Praktiken und Prinzipien auf die firmeninterne Softwareentwicklung an.
Es bietet Nutzern eine zusätzliche Option, speziell wenn Produktionsteams nicht in der Lage sind, ein erforderliches Requirement im notwendigen Zeitraum zu liefern.
Erfolgreiche InnerSource Projekte betreffen &lt;a href="https://innersourcecommons.org/learn/learning-path/product-owner">&lt;em>Produkt Owner&lt;/em>&lt;/a> und &lt;a href="https://innersourcecommons.org/de/learn/learning-path/trusted-committer/">&lt;em>Trusted Committer&lt;/em>&lt;/a> vom &lt;strong>Hostteam&lt;/strong> sowie ein &lt;a href="https://innersourcecommons.org/learn/learning-path/contributor">&lt;em>Contributor&lt;/em>&lt;/a> vom &lt;strong>Gastteam&lt;/strong>.
Richtig betriebenes InnerSource bietet beiden teilnehmenden Teams viele Vorteile.
Die Schlüsselprinzipien, nach denen gut geführte InnerSource Projekte funktionieren, sind &lt;strong>freiwilliger Code-Beitrag&lt;/strong> und &lt;strong>Mentoring Fokus&lt;/strong>.&lt;/p></description></item></channel></rss>