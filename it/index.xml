<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>InnerSource Commons</title><link>https://innersourcecommons.org/it/</link><description>Recent content on InnerSource Commons</description><generator>Hugo</generator><language>it</language><atom:link href="https://innersourcecommons.org/it/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduzione</title><link>https://innersourcecommons.org/it/learn/learning-path/contributor/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/contributor/01/</guid><description>&lt;div class="sect2">
&lt;h3 id="_il_contributore_nellinnersource">Il Contributore nell&amp;#8217;InnerSource&lt;/h3>
&lt;div class="paragraph">
&lt;p>Sei stato mai bloccato nel tuo prossimo task di programmazione perché un altro team non ha avuto il tempo di aggiungere una funzionalità nei loro sistemi da cui tu dipendi?
Forse dopo un pò di tempo hai anche dovuto fare del lavoro aggiuntivo nel tuo progetto per aggirare la funzionalità mancante.
Quanto sarebbe bello non dover mai essere bloccati in questo modo?&lt;/p></description></item><item><title>Introduzione</title><link>https://innersourcecommons.org/it/learn/learning-path/introduction/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/introduction/01/</guid><description>&lt;div class="paragraph">
&lt;p>Questa sezione del Learning Path contiene un&amp;#8217;introduzione al concetto di InnerSource.
InnerSource è l&amp;#8217;applicazione di pratiche e principi open source per lo sviluppo software all&amp;#8217;interno dell&amp;#8217;azienda.
Il software InnerSource rimane di proprietà dell&amp;#8217;azienda, ma internamente è aperto per chiunque lo voglia utilizzare e per chiunque voglia contribuire ad esso.
Questa strategia consente una collaborazione ampia ed efficace, producendo software agile e reattivo alle mutevoli esigenze dei suoi numerosi stakeholder interni.&lt;/p></description></item><item><title>Introduzione al ruolo di Trusted committer</title><link>https://innersourcecommons.org/it/learn/learning-path/trusted-committer/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/trusted-committer/01/</guid><description>&lt;div class="paragraph">
&lt;p>Il ruolo di Trusted committer (TC) è uno dei ruoli chiave in una community InnerSource.
Pensa ai Trusted Committers come alle persone di una comunità di cui ti fidi per importanti decisioni tecniche e supportere i contributori nel portare contributi oltre il traguardo.
Il ruolo di Trusted Committer è impegnativo e gratificante.
È più che un semplice amministratore con le sue opinioni ha un ruolo importante per il successo di qualsiasi comunità InnerSource.
In generale, il ruolo del Trusted Committer è definito dalle sue responsabilità, piuttosto che dai suoi privilegi.
Al livello piu' alto, i Trusted Committers rappresentano gli interessi sia della loro comunità InnerSource che dei prodotti che la comunità stessa sta costruendo.
Si occupano della salute della comunità e del prodotto.
Quindi, in qualità di Trusted Committer, avrai responsabilità orientate alla tecnologia e alla comunità.
Esploreremo entrambe queste dimensioni nelle seguenti sezioni.
Prima di entrare nei dettagli di ciò che un Trusted Committer fa veramente, passiamo un po' di tempo a confrontare il ruolo di Trusted Committer con altri ruoli in InnerSource ad un alto livello di astrazione e spieghiamo perché pensiamo che il nome sia adatto e importante allo stesso tempo.
Iniziamo con il ruolo &lt;a href="https://innersourcecommons.org/learn/learning-path/contributor">&lt;em>Contributor&lt;/em>&lt;/a>.
Un &lt;em>Contributor&lt;/em> - come il nome implica - apporta contributi a una comunità InnerSource.
Questi contributi possono essere risorse di codice o non di codice, come segnalizioni di bug, richieste di funzioni o documentazione.
&lt;em>Contributors&lt;/em> può far parte o meno della comunità.
Possono essere inviati da un altro team per sviluppare una funzione di cui il team ha bisogno.
Questo è il motivo per cui a volte ci riferiamo anche a &lt;em>Contributors&lt;/em> come &lt;em>Guests&lt;/em> o come parte di un &lt;em>Guest Team&lt;/em>.
Il &lt;em>Contributor&lt;/em> è responsabile di adeguarsi e conformarsi alle aspettative e ai processi della comunità.
Il &lt;em>Trusted Committer&lt;/em> è sempre un membro della comunità InnerSource, che a volte viene anche chiamato &lt;em>Host Team&lt;/em>. In questa analogia, il Trusted Committer è responsabile sia della costruzione della casa che dell&amp;#8217;impostazione delle regole della stessa, questo per garantire che i loro ospiti si sentano a loro agio e possano lavorare insieme in modo efficace.
Rispetto ai contributori, i Trusted Committers si sono guadagnati la responsabilità di mettere il codice in produzione e sono generalmente autorizzati a svolgere attività che hanno un più alto livello di rischio associato.
Il &lt;a href="https://innersourcecommons.org/learn/learning-path/product-owner">&lt;em>Product Owner&lt;/em> (PO)&lt;/a> è il terzo ruolo in InnerSource.
Simile ai processi agili, il PO è responsabile della definizione e della definizione delle priorità dei requisiti e delle storie che la comunità deve implementare.
Il PO interagisce spesso con il Trusted Committer (ad esempio, verificando che una funzione richiesta o fornita appartenga effettivamente al prodotto).
Soprattutto nelle comunità InnerSource più piccole e di base, il Trusted Committer di solito riveste anche il ruolo di PO.
Dai un&amp;#8217;occhiata al nostro &lt;a href="https://innersourcecommons.org/learn/learning-path/product-owner">Product Owner Learning Path segment&lt;/a> per informazioni più dettagliate.
== = Perché i nomi dei ruoli sono importanti
Il ruolo del Trusted Committer è presente in ogni comunità InnerSource di successo, ma non in tutte le comunità si utilizza questo nome.
Alcune comunità utilizzano il termine Maintainer, ma questo termine è in conflitto con altri ruoli tecnici, come ad esempio il ruolo "Maintainer" definito da GitHub.
Apache utilizza anche il termine &lt;em>Committer&lt;/em>, ma a questo ruolo attribuiscono meno responsabilità e per lo più orientate alla tecnologia.
Con le sue ulteriori responsabilità orientate alla comunità, il ruolo del Trusted Committer va al di là di questo.
Il "Trusted" in Trusted Committer significa che questa persona è affidabile e quindi autorizzata sia dal loro management che dalla loro comunità a fare il suo lavoro.
Promuovendo l&amp;#8217;apertura e la trasparenza, i Trusted Committers creano fiducia nel processo e anche nel prodotto che si sta costruendo.
In modo simile al modo in cui la denominazione è importante nella scrittura del software, scegliendo i nomi giusti per i ruoli e facendolo in modo coerente assicura che tutti abbiano la stessa comprensione dei ruoli svolti nella comunità.
Ora che si ha una comprensione di base del ruolo, perché utilizzare il termine Trusted Committer è appropriato e sapere come un Trusted Committer potrebbe interagire con altri ruoli comuni in un progetto software, diamo un&amp;#8217;occhiata alle responsabilità di un Trusted Committer.
== = Responsabilità
I Trusted Committers hanno diverse responsabilità, tra cui:
* &lt;a href="https://innersourcecommons.org/it/learn/learning-path/trusted-committer/02/">Assicurare la qualità del prodotto&lt;/a>
* &lt;a href="https://innersourcecommons.org/it/learn/learning-path/trusted-committer/03/">Mantenere la comunità sana&lt;/a>
* &lt;a href="https://innersourcecommons.org/it/learn/learning-path/trusted-committer/05/">Ridurre gli ostacoli alla contribuzione&lt;/a>
* &lt;a href="https://innersourcecommons.org/it/learn/learning-path/trusted-committer/04/">Elevare il livello della comunità&lt;/a>
* &lt;a href="https://innersourcecommons.org/learn/learning-path/trusted-committer/06/">Sostenere le esigenze della comunità&lt;/a>
Analizzeremo queste responsabilità in modo più approfondito nelle pagine seguenti e esploreremo anche il percorso di &lt;a href="https://innersourcecommons.org/learn/learning-path/trusted-committer/07/">becoming a Trusted Committer&lt;/a> alla fine di questo articolo.&lt;/p></description></item><item><title>Diventare un Contributor InnerSource</title><link>https://innersourcecommons.org/it/learn/learning-path/contributor/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/contributor/02/</guid><description>&lt;div class="paragraph">
&lt;p>I contributori InnerSource operano al di fuori dei confini regolari del team, sono i collegamenti tra tutti i silos aziendali. Come tali, hanno bisogno di essere a conoscenza di alcune pratiche comuni che rendano questo lavoro più efficace.&lt;/p></description></item><item><title>Garantire la qualità del prodotto</title><link>https://innersourcecommons.org/it/learn/learning-path/trusted-committer/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/trusted-committer/02/</guid><description>&lt;div class="paragraph">
&lt;p>=&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Iniziamo con la responsabilità più spesso associata al ruolo di Trusted Committer: garantire la qualità del prodotto.&lt;/p></description></item><item><title>Quali problemi l'InnerSource risolve?</title><link>https://innersourcecommons.org/it/learn/learning-path/introduction/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/introduction/02/</guid><description>&lt;div class="paragraph">
&lt;p>InnerSource incoraggia e premia la collaborazione ed il riuso del codice per chiunque, indifferentemente dalla posizione che ricopre all&amp;#8217;interno della struttura organizzativa aziendale.
Questo approccio differisce da quello che si è visto all&amp;#8217;interno delle aziende tradizionali dove le idee ed il prodotto del lavoro tendono a rimanere intrappolati tra confini della gerarchia aziendale interna e dei suoi silos.
Esploriamo una situazione che illustra un esempio di questa idea.&lt;/p></description></item><item><title>Come funziona l'InnerSource?</title><link>https://innersourcecommons.org/it/learn/learning-path/introduction/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/introduction/03/</guid><description>&lt;div class="paragraph">
&lt;p>Diciamo che il team A usa il software prodotto dal team B.
Il team A invia una richiesta di funzionalità al team B, ma il team B non è in grado di implementare quella funzionalità in tempo per il team A.
In un contesto InnerSource, se il team A non può ottenere questa richiesta di funzionalità allora può inviare invece una pull request.
Vale a dire che il team A implementa la funzionalità direttamente all&amp;#8217;interno del software del team B ed esegue il submit di una pull request con le modifiche al codice.
I partner del team B esaminano ed accettano il codice inviato.&lt;/p></description></item><item><title>La mentalità del Contributore</title><link>https://innersourcecommons.org/it/learn/learning-path/contributor/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/contributor/03/</guid><description>&lt;div class="paragraph">
&lt;p>Nell&amp;#8217;ultima parte abbiamo sottolineato il perché tu dovresti voler riusare i componenti e
diventare attivo come un Contributore. Questo articolo condivide le best practice su come
contribuire con successo le tue modifiche alla code base dell&amp;#8217;host team.&lt;/p></description></item><item><title>Mantenere la community sana</title><link>https://innersourcecommons.org/it/learn/learning-path/trusted-committer/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/trusted-committer/03/</guid><description>&lt;div class="paragraph">
&lt;p>L&amp;#8217;introduzione ha sottolineato che i Trusted Committers hanno responsabilità sia per la tecnologia che per la community.
Non è sufficiente concentrarsi solo sul codice e sull&amp;#8217;integrità del codice.
Per garantire il successo a lungo termine, i Trusted Committers dovrebbero sforzarsi di mantenere sana anche la community che implementa il software.
Per questo motivo, devono trovare un buon equilibrio tra garantire la qualità del prodotto e far crescere una community sana.&lt;/p></description></item><item><title>Aggiornamento dei membri della comunità</title><link>https://innersourcecommons.org/it/learn/learning-path/trusted-committer/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/trusted-committer/04/</guid><description>&lt;div id="upleveling" class="paragraph">
&lt;p>VI è un continua partecipazione della comunità InnerSource. Vi sono persone che non sono a conoscenza della comunità. &lt;em>Newcomers&lt;/em> le quali potrebbero essere interessate alla comunità ed al prodotto, ma non lo hanno ancora utilizzato. &lt;em>Consumers&lt;/em> utilizzano il software ma potrebbero non aver apportato un contributo. Poi vi sono i &lt;a href="https://innersourcecommons.org/learn/learning-path/contributor">&lt;em>Contributors&lt;/em>&lt;/a> che hanno dato almeno un contributo, ed infine i &lt;em>Trusted Committers&lt;/em>, che si prendono la responsabilità sia del software che della comunità. In qualità di Trusted Committer, si è responsabile di educare le persone lungo questo percorso e migliorare la loro capacità di dare ontribute. In tal senso, i Trusted Committers agiscono come moltiplicatori di forza nella loro comunità.&lt;/p></description></item><item><title>Meccaniche della contribuzione</title><link>https://innersourcecommons.org/it/learn/learning-path/contributor/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/contributor/04/</guid><description>&lt;div class="paragraph">
&lt;p>Sei pronto per iniziare a contribuire a progetti/repo di altri team?
Non vedi l&amp;#8217;ora di ridurre i tuoi blocchi non tramite la gestione dell&amp;#8217;escalation ma tramite la collaborazione?
Questa sezione mostra consigli pratici e evidenzia i trucchi da ricordare quando si realizza un contributo InnerSource. Consente a te ed all&amp;#8217;host team di vivere un&amp;#8217;esperienza il più piacevole possibile, ponendo le basi per ulteriori contributi e grandiosa collaborazione.&lt;/p></description></item><item><title>Quali sono i benefici dell'InnerSource?</title><link>https://innersourcecommons.org/it/learn/learning-path/introduction/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/introduction/04/</guid><description>&lt;div class="paragraph">
&lt;p>Esistono molti benefici nel collaborare attraverso l&amp;#8217;applicazione dell&amp;#8217;InnerSource.
InnerSource fornisce all&amp;#8217;azienda una strategia scalabile per il &lt;strong>guest team per ottenere le richieste di funzionalità quando ne hanno bisogno loro&lt;/strong> senza l&amp;#8217;onere a lungo termine della manutenzione.
L&amp;#8217;azienda nel suo insieme vince poiché il tempo del guest team viene convogliato nel codice che altri possono usare.&lt;/p></description></item><item><title>I principi dell'InnerSource</title><link>https://innersourcecommons.org/it/learn/learning-path/introduction/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/introduction/05/</guid><description>&lt;div class="paragraph">
&lt;p>Ogni azienda, team, progetto ed individuo è differente.
Per questo motivo, il modo esatto con cui funziona il concetto di InnerSource varierà da una situazione all&amp;#8217;altra.
Al suo interno, comunque, sono quattro i principi su cui si fonda la base di qualsiasi caso di successo di InnerSource.
Questi principi traggono ispirazione da progetti Open Source di successo e sono richiesti affinché l&amp;#8217;InnerSource possa ottenere i vantaggi descritti in precedenza.&lt;/p></description></item><item><title>I vantaggi del diventare un Contributore InnerSource</title><link>https://innersourcecommons.org/it/learn/learning-path/contributor/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/contributor/05/</guid><description>&lt;div class="paragraph">
&lt;p>I contributori sono la lifa vitale dei progetti InnerSource. Ogni progetto che
viene seguito come un progetto InnerSource arriva sia con la promessa che con
l&amp;#8217;obiettivo finale di espandere il proprio team di sviluppo oltre i fondatori originali, sfruttando
il potenziale di ulteriori collaboratori tra gli utenti (anche a volte
indicati come clienti nelle aziende) di quel progetto.&lt;/p></description></item><item><title>Ridurre le barriere all'ingresso</title><link>https://innersourcecommons.org/it/learn/learning-path/trusted-committer/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/trusted-committer/05/</guid><description>&lt;div class="paragraph">
&lt;p>Sollecitare contributi in una comunità InnerSource è più impegnativo che in una comunità Open Source per una serie di ragioni:
* Il numero di potenziali &lt;a href="https://innersourcecommons.org/learn/learning-path/contributor">&lt;em>Contributors&lt;/em>&lt;/a> è più basso nelle comunità InnerSource.
* I Contributors vorranno contribuire durante il loro tempo di lavoro, il che significa che sono più limitati di tempo.
* Il lavoro in InnerSource potrebbe non essere necessariamente parte degli obiettivi di prestazione ufficiali dei Contributors, quindi il tempo trascorso a lavorare su InnerSource può sembrare rallentarne il raggiungimento.&lt;/p></description></item><item><title>Conclusione</title><link>https://innersourcecommons.org/it/learn/learning-path/contributor/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/contributor/06/</guid><description>&lt;div class="paragraph">
&lt;p>Grazie per aver esaminato il capitolo del Contributore del percorso di apprendimento InnerSource Commons. Con questa sezione hai imparato a conoscere il ruolo del Collaboratore, la linfa vitale dei progetti InnerSource. i contributori sono esterni al team dei proprietari dei componenti e apportano ulteriori preziosi input al progetto.&lt;/p></description></item><item><title>Conclusione</title><link>https://innersourcecommons.org/it/learn/learning-path/introduction/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/it/learn/learning-path/introduction/06/</guid><description>&lt;div class="paragraph">
&lt;p>In questo percorso formativo, abbiamo introdotto l&amp;#8217;InnerSource.
L&amp;#8217;InnerSource applica principi e best practice dell&amp;#8217;open source allo sviluppo software interno.
Questo approccio rende disponibile un&amp;#8217;opzione ulteriore agli utenti quando i team di produzione non sono in grado di consegnare una richiesta di funzionalità necessaria.
L&amp;#8217;InnerSource di successo coinvolge un &lt;a href="https://innersourcecommons.org/learn/learning-path/product-owner">&lt;em>product owner&lt;/em>&lt;/a> e un &lt;a href="https://innersourcecommons.org/learn/learning-path/trusted-committer">&lt;em>trusted committer&lt;/em>&lt;/a> dell'&lt;strong>host team&lt;/strong> così come un &lt;a href="https://innersourcecommons.org/learn/learning-path/contributor">&lt;em>contributor&lt;/em>&lt;/a> del &lt;strong>guest team&lt;/strong>.
Fatto in modo efficare, l&amp;#8217;InnerSource porta molti vantaggi ad entrambi i team partecipanti.
I principi chiave su cui si basa l&amp;#8217;InnerSource sono &lt;strong>contribuzione volontaria al codice&lt;/strong> ed il &lt;strong>tutoraggio prioritizzato&lt;/strong>.&lt;/p></description></item></channel></rss>