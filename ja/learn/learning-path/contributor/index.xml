<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ラーニングパス - コントリビューター on InnerSource Commons</title><link>https://innersourcecommons.org/ja/learn/learning-path/contributor/</link><description>Recent content in ラーニングパス - コントリビューター on InnerSource Commons</description><generator>Hugo</generator><language>ja</language><atom:link href="https://innersourcecommons.org/ja/learn/learning-path/contributor/index.xml" rel="self" type="application/rss+xml"/><item><title>はじめに</title><link>https://innersourcecommons.org/ja/learn/learning-path/contributor/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/ja/learn/learning-path/contributor/01/</guid><description>InnerSourceのコントリビューター あなたは、あなたの依存する機能を他チームがシステムに追加をする時間が無いために、次のコーディングタスクをブロックされたことはありませんか？ もしかすると、しばらくしてから、その不足している機能を補うために、あなたのプロジェクトで余計な作業をしなければならなかったかも知れません。 このような形で全くブロックされないことは、どんなに素晴らしいことでしょうか？
InnerSourceの原則を組み込んだプロジェクトでは、必要な機能を他のチームが提供するのを待ってブロックされることは決してありません。 もし必要なものが得られないなら、InnerSourceコントリビューターとして行動し、他チームのコードリポジトリに直接あなたが必要な変更を行うことかできます。
コントリビューターの役割は、InnerSourceコミュニティプロジェクトのリポジトリに貢献する人と表されます。 この人はコミュニティの一部の人であるかも知れないし、そうでないかも知れません。 しかし、かなりの数の人にとってコントリビューターとは、単にコミュニティについて知るだけのことから、コミュニティのプロダクトを使用し、コミュニティのメンバーと対話し、そして最終的に貢献を始めることができるという旅のようなものです。 最終的に、そのうち何人かは Trusted Committer(トラステッドコミッター) になるかも知れません。
他の役割との関係 InnerSourceコミュニティにおけるコントリビューターとしてあなたは、 Trusted Committer や Product Owner (プロダクトオーナー) などのInnerSourceの他の役割を担っている人や、おそらく他のコントリビューターとも交流することになります。 まれに、小さな草の根スタイルのプロジェクトでは、Trusted Committerとプロダクトオーナーなどの役割は同じ人が行うことができます。</description></item><item><title>InnerSourceコントリビューターになる</title><link>https://innersourcecommons.org/ja/learn/learning-path/contributor/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/ja/learn/learning-path/contributor/02/</guid><description>InnerSourceのコントリビューターは、通常のチームの境界外で活動し、組織のサイロを横断するリンクになります。 そのため、彼らはこの作業をより効果あるものにするための、いくつかの共通の方法を意識する必要があります。
マインドセットの共有 それでは - あなたはチームの製品に、新しい機能を実装しています。 この機能を動作させるためには、いくつかの機能が必要です。 実装に直ぐに取り掛かる代わりに、少し落ち着いて考えます：この機能は一般的な課題なのだろうか？ それは、あなたの組織の他のチームが共有するビジネスドメインで同じように直面しているものなのか？ この機能は、あなたのプロジェクトのドメインと直交するものなのか？ もし当てはまる場合、自分のチームを超えて見渡して：あなたのニーズにフィットするために利用したり改善できる共通のソリューションがあるのか？ あるべきなのか？
ソリューションを共有するメリット アフリカには、 &amp;#8220;早く行きたいなら一人で行きなさい。遠くに行きたいなら一緒に行きなさい&amp;#8221;　という諺があります。これは、ソフトウェア開発チームにも同じです。</description></item><item><title>コントリビューターの心構え</title><link>https://innersourcecommons.org/ja/learn/learning-path/contributor/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/ja/learn/learning-path/contributor/03/</guid><description>前のセグメントでは、あなたがコンポーネントを再利用してコントリビューターとして活動するようになるかの理由を説明しました。 この記事では、ホストチームのコードベースにあなたの変更をうまく提供する方法のベストプラクティスを共有します。
ホストチームに貢献しようとしているInnerSouceのコントリビューターは、基本的には彼らの家のゲストです。 一般的に、良いゲストは決められた方法で行動することが期待されています。
ドアをノックする
ハウスルールを予測して従う
家のオーナーではないことを理解し、それに応じた行動をする
これらの期待は、どのようにInnerSourceのプロジェクトに適用されるのでしょうか？
入る 隣人を訪ねるとき、たとえドアが開いていても、ノックしたりドアベルを鳴らしたりせずに彼らの家に入ることはないでしょう。 同様に、InnerSourceにおいても、訪問者としてどのコードリポジトリに対しても直接コミットすることはできません（または招待されません）。
代わりに、コードベースに変更を加えた後、それらをプルリクエストとして送信します。 大規模な変更を行うことや、隣人の家の改善を考えたりしないのと同様に、InnerSourceではプロジェクトのコラボレーション・ガイドラインを予測し、それに従うことになります。 今度は、ホストがあなたに方法を示します - InnerSourceでは、既存のTrusted Committer達がゲストを指導するために時間を費やしていることと解釈します。</description></item><item><title>コントリビューションの仕組み</title><link>https://innersourcecommons.org/ja/learn/learning-path/contributor/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/ja/learn/learning-path/contributor/04/</guid><description>他のチームのプロジェクト/リポジトリに貢献を始める準備はできていますか？ マネージメント層へのエスカレーションではなく、コラボレーションでブロッカーを減らすことを楽しみにしていますか？ このセクションでは、InnerSourceに貢献する際に覚えておくべき落とし穴に焦点を当て、実践的なアドバイスを提供します。 これにより、あなたとホストチームが可能な限り快適な経験をすることを可能とし、より多くのコントリビューションと素晴らしいコラボレーションをするための基礎を築きます。
この記事は、あなたがおそらく経験する次の3つのステップに分かれています。
コントリビューションの機会を求め、それに取り組む準備をする
実際にコントリビューションするものを作成する
ギフトをキレイにして包み、ホストチームに提供する
もし、あなたの貢献がより大きければ、共通の目標に向かって反復しながら、これらのステップ（の一部）を繰り返し実行する可能性があります。 そうすることで、すべてのことがより自然に感じられるようになる可能性が非常に高くなるでしょうし、おそらく、以前に何か他のことをしていた理由を不思議に思うかもしれません。
取り組む準備をする リードタイム 一つの重要な違いは、ターンアラウンドタイムです。 初めてコントリビューションする時はいつも、あなたは新しい（ホスト）チームに参加する事になります。 その結果、あなたは彼らのコードベース、使用している技術、そして彼らの好む開発環境（テストフレームワークやビルドシステムを想像してください）について知る必要があります。 この種のツールが標準化されている場合でも、各チームはいくらかの個性があります。 技術的な側面に加えて、コミュニケーション方法の違いに直面することもあるかもしれません（コードレビューを想像してください）。 しばらくして戻ってきたときには、チームのやり方やメンバーが変わっているかも知れません。 しばらく会っていなかった友人を訪ねてキャッチアップする時と同じように時間をかけてください。</description></item><item><title>InnerSourceのコントリビューターになるメリット</title><link>https://innersourcecommons.org/ja/learn/learning-path/contributor/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/ja/learn/learning-path/contributor/05/</guid><description>コントリビューターはInnerSourceプロジェクトの生命線です。 InnerSourceプロジェクトとして実行されるすべてのプロジェクトには、開発チームを当初の創設者の枠を超えて拡大し、そのプロジェクトのユーザー（時に企業では顧客とも呼ばれる）間でさらなる協力者の可能性を利用するという見込みと究極の目標の両方があります。
しかし、個々の開発者がマネージャの指示を受けていないプロジェクトに対して時間を費やす動機は何でしょうか？ マネージャが、開発者に対して100%自分の管理下にないプロジェクトの改善に時間を作る動機となるものは何でしょうか？
個人の動機 最も自明な動機は、初期のコントリビューターをオープンソースに引き込むことです。
あなたが長い間回避してきた迷惑なバグを覚えていますか？ これらの回避策のメンテナンスに費やす時間とエネルギーは？ アップストリームチームが将来その問題を修正するのを待たずに、先に自分で問題を修正できるとしたらどうでしょうか？ この「自分の手で問題を解決する」状況が初めてのコントリビューターは、自分のコードベースの回避策の数を減らすために、日々の作業に依存するプロジェクトの問題を修正することから始めることがよくあります。
独自の回避策を維持するのではなく、修正を作成してコントリビューションするかどうかを決めるときには、そのコントリビューションが独自の変更の品質にもたらすメリットについて考えてください。 単独で作業する代わりに、アップストリームプロジェクトで作業する人は、あなたのソリューションをレビューするだけでなく改善することもできます。 サポートと指導を受けることで、開発作業が大幅にスピードアップします。
他の人と多くの時間を過ごすことは、時間が経つにつれて、チームがどのように機能するか、どのように組織化されるか、どのようなツールを用いてプロジェクトを構築しているかを学ぶことを意味します。 新しいライブラリやビルドシステムについて読むだけではなく、それを自分のプロジェクトに導入する前に実践的な経験を積むことができるので、多くの場合、あなた自身のプロジェクトもその経験から恩恵を受けることになるでしょう。 複数のコアプロジェクトに取り組むことは、課題に対するベストプラクティスとソリューションを引き出す、より大きなエコシステムに晒されることを意味します。</description></item><item><title>おわりに</title><link>https://innersourcecommons.org/ja/learn/learning-path/contributor/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/ja/learn/learning-path/contributor/06/</guid><description>InnerSourceラーニングパス、コントリビューターセグメントをご覧いただきありがとうございます。 このセクションでは、InnerSourceプロジェクトの生命線となる、コントリビューターの役割について学びました。 コントリビューターは、コンポーネント所有者の外側にあり、プロジェクトに追加の貴重な情報をもたらします。
このセクションでは、コントリビューションする機会を見つけてコントリビューターになる方法について学びました。 そのような機会を見つけたり作ったりするのに必要な考え方や習慣について見直しました。 また、その役割の心構えと、コントリビューションを成功に導く可能性のあるアプローチについても説明しました。
正しい考え方や、習慣、心構えをしていても、コントリビューションの成功を妨げるものがいくつかあります。そのため、それらの要点について、詳細を説明しました。
最後に、あなたのチームメイトや組織のさまざまなレベルを説得することが難しい場合があるため、このプロセスを簡単にするために、さまざまな観点からコントリビューションのメリットを詳細に説明しました。
あなたが記事を読んだりビデオを見たりすることを楽しみ、InnerSourceと良いコントリビューターになることに向けた旅のために、興味深く新しい洞察をいくつか得ることができることを願っています。
もし、まだそうしていない場合は、InnerSourceラーニングパス( http://innersourcecommons.org/learningpath/ )で、InnerSouceの他の側面ついて、さらに学ぶことをお勧めします。
オンラインのInnerSourceグループ InnerSourceコモンズ をチェックすることをお勧めします。自由に議論に参加して、あなたの組織で学んだり経験したことを共有してください。</description></item><item><title>Workbook</title><link>https://innersourcecommons.org/ja/learn/learning-path/contributor/workbook/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://innersourcecommons.org/ja/learn/learning-path/contributor/workbook/</guid><description>Video: InnerSource Contributor SEGMENT: Becoming an InnerSource Contributor TIP: More than one answer may be correct in some questions.</description></item></channel></rss>